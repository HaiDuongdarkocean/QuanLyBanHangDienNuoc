using System;
using System.Collections.Generic;
using BLL;
using DTO;

namespace UI
{
    public static class CuaHangUI
    {
        private static CuaHangBLL bll = new CuaHangBLL();

        public static void MenuCuaHang()
        {
            while (true)
            {
                Console.WriteLine("\n=== QU·∫¢N L√ù C·ª¨A H√ÄNG ===");
                Console.WriteLine("1. Th√™m c·ª≠a h√†ng");
                Console.WriteLine("2. C·∫≠p nh·∫≠t c·ª≠a h√†ng");
                Console.WriteLine("3. X√≥a c·ª≠a h√†ng");
                Console.WriteLine("4. Xem danh s√°ch c·ª≠a h√†ng");
                Console.WriteLine("5. Xem th√¥ng tin m·ªôt c·ª≠a h√†ng");
                Console.WriteLine("0. Tho√°t");
                Console.Write("Ch·ªçn: ");
                string? chon = Console.ReadLine();

                switch (chon)
                {
                    case "1":
                        ThemCuaHang();
                        break;
                    case "2":
                        CapNhatCuaHang();
                        break;
                    case "3":
                        XoaCuaHang();
                        break;
                    case "4":
                        XemDanhSachCuaHang();
                        break;
                    case "5":
                        XemThongTinCuaHang();
                        break;
                    case "0":
                        return;
                    default:
                        Console.WriteLine("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá! Vui l√≤ng ch·ªçn l·∫°i.");
                        break;
                }
            }
        }

        private static void ThemCuaHang()
        {
            Console.Write("T√™n c·ª≠a h√†ng: ");
            string? ten = Console.ReadLine();
            Console.Write("ƒê·ªãa ch·ªâ: ");
            string? diaChi = Console.ReadLine();
            Console.Write("S·ªë ƒëi·ªán tho·∫°i: ");
            string? sdt = Console.ReadLine();

            try
            {
                CuaHangDTO cuaHang = new CuaHangDTO
                {
                    TenCuaHang = ten,
                    DiaChi = diaChi,
                    SoDienThoai = sdt
                };

                if (bll.ThemCuaHang(cuaHang))
                    Console.WriteLine("‚úÖ Th√™m c·ª≠a h√†ng th√†nh c√¥ng!");
                else
                    Console.WriteLine("‚ùå Th√™m c·ª≠a h√†ng th·∫•t b·∫°i.");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå L·ªói: {ex.Message}");
            }
        }

        private static void CapNhatCuaHang()
        {
            Console.Write("Nh·∫≠p m√£ c·ª≠a h√†ng c·∫ßn c·∫≠p nh·∫≠t: ");
            if (!int.TryParse(Console.ReadLine(), out int id))
            {
                Console.WriteLine("‚ùå M√£ c·ª≠a h√†ng kh√¥ng h·ª£p l·ªá.");
                return;
            }

            Console.Write("T√™n c·ª≠a h√†ng m·ªõi: ");
            string ten = Console.ReadLine();
            Console.Write("ƒê·ªãa ch·ªâ m·ªõi: ");
            string diaChi = Console.ReadLine();
            Console.Write("S·ªë ƒëi·ªán tho·∫°i m·ªõi: ");
            string sdt = Console.ReadLine();

            try
            {
                CuaHangDTO cuaHang = new CuaHangDTO
                {
                    CuaHangID = id,
                    TenCuaHang = ten,
                    DiaChi = diaChi,
                    SoDienThoai = sdt
                };

                if (bll.CapNhatCuaHang(cuaHang))
                    Console.WriteLine("‚úÖ C·∫≠p nh·∫≠t c·ª≠a h√†ng th√†nh c√¥ng!");
                else
                    Console.WriteLine("‚ùå C·∫≠p nh·∫≠t c·ª≠a h√†ng th·∫•t b·∫°i.");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå L·ªói: {ex.Message}");
            }
        }

        private static void XoaCuaHang()
        {
            Console.Write("Nh·∫≠p m√£ c·ª≠a h√†ng c·∫ßn x√≥a: ");
            if (!int.TryParse(Console.ReadLine(), out int id))
            {
                Console.WriteLine("‚ùå M√£ c·ª≠a h√†ng kh√¥ng h·ª£p l·ªá.");
                return;
            }

            try
            {
                if (bll.XoaCuaHang(id))
                    Console.WriteLine("‚úÖ X√≥a c·ª≠a h√†ng th√†nh c√¥ng!");
                else
                    Console.WriteLine("‚ùå X√≥a c·ª≠a h√†ng th·∫•t b·∫°i.");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå L·ªói: {ex.Message}");
            }
        }

        private static void XemDanhSachCuaHang()
        {
            List<CuaHangDTO> danhSach = bll.LayDanhSachCuaHang();
            if (danhSach.Count == 0)
            {
                Console.WriteLine("‚ùå Kh√¥ng c√≥ c·ª≠a h√†ng n√†o trong h·ªá th·ªëng.");
                return;
            }

            Console.WriteLine("\n=== DANH S√ÅCH C·ª¨A H√ÄNG ===");
            foreach (var c in danhSach)
            {
                Console.WriteLine($"üîπ {c.CuaHangID}: {c.TenCuaHang} - {c.DiaChi} - {c.SoDienThoai}");
            }
        }

        private static void XemThongTinCuaHang()
        {
            Console.Write("Nh·∫≠p m√£ c·ª≠a h√†ng c·∫ßn xem: ");
            if (!int.TryParse(Console.ReadLine(), out int id))
            {
                Console.WriteLine("‚ùå M√£ c·ª≠a h√†ng kh√¥ng h·ª£p l·ªá.");
                return;
            }

            try
            {
                var cuaHang = bll.LayThongTinCuaHang(id);
                Console.WriteLine("\n=== TH√îNG TIN C·ª¨A H√ÄNG ===");
                Console.WriteLine($"üîπ M√£ c·ª≠a h√†ng: {cuaHang.CuaHangID}");
                Console.WriteLine($"üîπ T√™n c·ª≠a h√†ng: {cuaHang.TenCuaHang}");
                Console.WriteLine($"üîπ ƒê·ªãa ch·ªâ: {cuaHang.DiaChi}");
                Console.WriteLine($"üîπ S·ªë ƒëi·ªán tho·∫°i: {cuaHang.SoDienThoai}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå L·ªói: {ex.Message}");
            }
        }
    }
}
